name: Update Changelog

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'docs: update changelog')"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction
          
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
      - name: Generate Changelog
        run: |
          # Generate changelog
          poetry run semantic-release changelog --unreleased > new_changes.md
          
          # Update CHANGELOG.md
          if [ -f CHANGELOG.md ]; then
            cat new_changes.md CHANGELOG.md > temp_changelog.md
            mv temp_changelog.md CHANGELOG.md
          else
            mv new_changes.md CHANGELOG.md
          fi
          
          # Check if there are any changes
          if git diff --quiet CHANGELOG.md; then
            echo "No changes to CHANGELOG.md"
          else
            # Show the changes
            git diff CHANGELOG.md
            
            # Commit changes
            git add CHANGELOG.md
            git commit -m "docs: update changelog"
            git push origin HEAD:main
          fi 